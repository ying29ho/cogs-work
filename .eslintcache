[{"/Users/shimpling-one/Desktop/work/cogswork/src/index.js":"1","/Users/shimpling-one/Desktop/work/cogswork/src/App.js":"2","/Users/shimpling-one/Desktop/work/cogswork/src/reportWebVitals.js":"3","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Home/index.js":"4","/Users/shimpling-one/Desktop/work/cogswork/src/components/card/index.js":"5","/Users/shimpling-one/Desktop/work/cogswork/src/components/form/index.js":"6","/Users/shimpling-one/Desktop/work/cogswork/src/pages/SignUp/index.js":"7","/Users/shimpling-one/Desktop/work/cogswork/src/pages/LogIn/index.js":"8","/Users/shimpling-one/Desktop/work/cogswork/src/components/button/index.js":"9","/Users/shimpling-one/Desktop/work/cogswork/src/pages/CategoryProduct/index.js":"10","/Users/shimpling-one/Desktop/work/cogswork/src/pages/IndividualProduct/index.js":"11","/Users/shimpling-one/Desktop/work/cogswork/src/components/layout/sidebar/index.js":"12","/Users/shimpling-one/Desktop/work/cogswork/src/components/layout/index.js":"13","/Users/shimpling-one/Desktop/work/cogswork/src/components/router/index.js":"14","/Users/shimpling-one/Desktop/work/cogswork/src/components/layout/title/index.js":"15","/Users/shimpling-one/Desktop/work/cogswork/src/components/tabs/index.js":"16","/Users/shimpling-one/Desktop/work/cogswork/src/components/images/index.js":"17","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Policies/index.js":"18","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/index.js":"19","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/cart.js":"20","/Users/shimpling-one/Desktop/work/cogswork/src/components/table/index.js":"21","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Delivery.js":"22","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Cart.js":"23","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Payment.js":"24","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Confirm.js":"25","/Users/shimpling-one/Desktop/work/cogswork/src/context/shopContext.js":"26","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Loading/index.js":"27","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Error/index.js":"28"},{"size":2226,"mtime":1615797493873,"results":"29","hashOfConfig":"30"},{"size":1726,"mtime":1615190337668,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1610518116252,"results":"32","hashOfConfig":"30"},{"size":2860,"mtime":1615792101808,"results":"33","hashOfConfig":"30"},{"size":3149,"mtime":1615792367116,"results":"34","hashOfConfig":"30"},{"size":2580,"mtime":1615782780942,"results":"35","hashOfConfig":"30"},{"size":3304,"mtime":1611823963637,"results":"36","hashOfConfig":"30"},{"size":2030,"mtime":1615794462986,"results":"37","hashOfConfig":"30"},{"size":313,"mtime":1615794117293,"results":"38","hashOfConfig":"30"},{"size":2785,"mtime":1615719806186,"results":"39","hashOfConfig":"30"},{"size":4827,"mtime":1615792426617,"results":"40","hashOfConfig":"30"},{"size":6476,"mtime":1615868588200,"results":"41","hashOfConfig":"30"},{"size":328,"mtime":1615794275979,"results":"42","hashOfConfig":"30"},{"size":2547,"mtime":1615719498521,"results":"43","hashOfConfig":"30"},{"size":429,"mtime":1615794047856,"results":"44","hashOfConfig":"30"},{"size":1133,"mtime":1615866469475,"results":"45","hashOfConfig":"30"},{"size":788,"mtime":1615794308327,"results":"46","hashOfConfig":"30"},{"size":1564,"mtime":1611806298329,"results":"47","hashOfConfig":"30"},{"size":115,"mtime":1611727172164,"results":"48","hashOfConfig":"30"},{"size":1609,"mtime":1611728088515,"results":"49","hashOfConfig":"30"},{"size":10028,"mtime":1615791939705,"results":"50","hashOfConfig":"30"},{"size":2226,"mtime":1615794442174,"results":"51","hashOfConfig":"30"},{"size":3931,"mtime":1615794238963,"results":"52","hashOfConfig":"30"},{"size":1692,"mtime":1611806201287,"results":"53","hashOfConfig":"30"},{"size":1071,"mtime":1611806193236,"results":"54","hashOfConfig":"30"},{"size":1678,"mtime":1615794009502,"results":"55","hashOfConfig":"30"},{"size":641,"mtime":1614327517531,"results":"56","hashOfConfig":"30"},{"size":691,"mtime":1614327598431,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1f8ijn5",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/shimpling-one/Desktop/work/cogswork/src/index.js",[],["118","119"],"/Users/shimpling-one/Desktop/work/cogswork/src/App.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/reportWebVitals.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/Home/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/components/card/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/components/form/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/SignUp/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/LogIn/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/components/button/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/CategoryProduct/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/IndividualProduct/index.js",["120"],"// import Title from \"../../components/layout/title\";\nimport React, { useContext } from \"react\";\n// import { Input, Checkbox, Select } from \"../../components/form\";\n// import Form from \"react-bootstrap/Form\";\n// import CardColumns from \"react-bootstrap/CardColumns\";\nimport { DetailCard } from \"../../components/card\";\nimport MainTab from \"../../components/tabs\";\nimport ImageCarousel from \"../../components/images\";\nimport { withRouter } from \"react-router\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { useFormik } from \"formik\";\n\n// import { connect } from \"react-redux\";\n// import {addLineItem} from \"../../redux/actions\";\n\nimport \"./Individual.css\";\n\nimport styled from \"styled-components\";\nimport { CheckoutIdContext } from \"../../context/shopContext\";\n\nconst Container = styled.div`\n  border: 5px solid #ff286b;\n  border-radius: 3px;\n  border-bottom: 50px solid #ff286b;\n  padding: 20px 20px 60px 20px;\n\n  height: auto;\n  width: 80%;\n  transform: translateX(15%);\n  margin-top: 100px;\n\n  h2 {\n    background: #005678;\n    height: 10vh;\n    width: auto;\n    margin: -100px 0 0 0;\n  }\n\n  @media (max-width: 500px) {\n    width: 95vw;\n    margin: 120px 0 0 -40px;\n\n    h2 {\n      display: none;\n    }\n  }\n`;\n\nconst FIRST_ADD_LINEITEMS = gql`\n  mutation($lineItem: [CheckoutLineItemInput!]!) {\n    checkoutCreate(input: { lineItems: $lineItem }) {\n      checkout {\n        id\n        webUrl\n        lineItems(first: 20) {\n          edges {\n            node {\n              id\n              title\n              quantity\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_LINEITEMS = gql`\n  mutation checkoutLineItemsAdd(\n    $lineItem: [CheckoutLineItemInput!]!\n    $checkoutId: ID!\n  ) {\n    checkoutLineItemsAdd(lineItems: $lineItem, checkoutId: $checkoutId) {\n      checkout {\n        id\n        webUrl\n        lineItems(first: 20) {\n          edges {\n            node {\n              id\n              title\n              quantity\n            }\n          }\n        }\n      }\n      checkoutUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`;\n\nconst IndividualProduct = (props) => {\n  const formik = useFormik({\n    initialValues: {\n      quantity: 1,\n    },\n    onSubmit: (values) => {\n      HandleAddToCart(productInfo.variants.edges[0].node.id, values.quantity);\n      // console.log(\"submitted\");\n    },\n  });\n  const { productHandle, productInfo } = props.location.state;\n  //cannot move this\n  // const lineItem = useContext(LineItemContext);\n  const [checkoutId, setCheckoutId] = useContext(CheckoutIdContext);\n\n  // console.log(\"checkoutid\", checkoutId);\n  // console.log(typeof checkoutId);\n\n  const [updateCart] = useMutation(ADD_LINEITEMS, {\n    onCompleted: (data) => null,\n    onError: (error) =>\n      alert(\"Not Added to cart. Try again\") + console.log(error),\n  });\n\n  const [firstAddToCart] = useMutation(FIRST_ADD_LINEITEMS, {\n    onCompleted: (data) =>\n      setCheckoutId(data.checkoutCreate.checkout.id),\n      // +\n      // console.log(\"first add data\", data) +\n      // console.log(\"new checkout id\", checkoutId),\n    onError: (error) =>\n      alert(\"Not added to cart. Try again\") + console.log(error),\n  });\n\n  const HandleAddToCart = (variantId, quantity) => {\n    // const newItem = {\n    //   variantId: variantId,\n    //   quantity: quantity,\n    // };\n    // lineItem.push(newItem);\n    const lineItem = [\n      {\n        variantId: variantId,\n        quantity: quantity,\n      },\n    ];\n    // console.log(\"pushed item\", lineItem);\n    // console.log(typeof lineItem);\n\n    // useEffect(()=>{\n\n    checkoutId === \"\" || checkoutId === null\n      ? firstAddToCart({ variables: { lineItem } })\n      : updateCart({ variables: { lineItem, checkoutId } });\n    // }, [checkoutId. lineItem, firstAddToCart(), updateCart()])\n    // console.log(lineItem);\n    return alert(\"Added to Cart\");\n  };\n  return (\n    <Container className=\"individual\">\n      <h2 data-title={productInfo.title}>{productInfo.title}</h2>\n      <div className=\"indi-main\">\n        <div className=\"container-1\">\n          <ImageCarousel arrays={productInfo.images.edges} />\n        </div>\n        <div className=\"container-2\">\n          <DetailCard\n            productName={productInfo.title}\n            availability={productInfo.totalInventory}\n            name=\"quantity\"\n            value={formik.values.quantity}\n            onChange={formik.handleChange}\n            price={productInfo.priceRange.maxVariantPrice.amount}\n            onClick={formik.handleSubmit}\n            type=\"number\"\n          />\n        </div>\n        <div className=\"container-3\">\n          <MainTab defaultActiveKey=\"desc\" desc={productInfo.description} />\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default // connect(null, { addLineItem });\nwithRouter(IndividualProduct);\n","/Users/shimpling-one/Desktop/work/cogswork/src/components/layout/sidebar/index.js",["121","122"],"/Users/shimpling-one/Desktop/work/cogswork/src/components/layout/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/components/router/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/components/layout/title/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/components/tabs/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/components/images/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/Policies/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/cart.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/components/table/index.js",["123"],"import React, { useContext } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\n\nimport { CheckoutIdContext } from \"../../context/shopContext\";\nimport { Radio } from \"../form\";\n\nimport styled from \"styled-components\";\nimport \"./table.css\";\n\nconst Container = styled.div`\n  width: 100%;\n\n  th {\n    text-align: center;\n    border-bottom: 2px solid #05d9e8;\n    border-bottom-width: 100%;\n  }\n  td {\n    color: #d1f7ff;\n    font-size: 1.5rem;\n    text-align: center;\n  }\n\n  h3 {\n    margin: 0;\n  }\n\n  .radio > label {\n    font-size: 1.5rem;\n  }\n\n  .radio {\n    text-align: left;\n    margin-left: 2rem;\n  }\n`;\n\nconst REMOVE_LINEITEM = gql`\n  mutation checkoutLineItemsRemove($checkoutId: ID!, $lineItemIds: [ID!]!) {\n    checkoutLineItemsRemove(\n      checkoutId: $checkoutId\n      lineItemIds: $lineItemIds\n    ) {\n      checkout {\n        id\n        webUrl\n        lineItems(first: 50) {\n          edges {\n            node {\n              id\n              title\n              quantity\n              unitPrice {\n                amount\n              }\n            }\n          }\n        }\n        lineItemsSubtotalPrice {\n          amount\n        }\n      }\n      checkoutUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`;\n\nconst FETCH_ITEM_PRICE = gql`\n  query($productId: ID!) {\n    node(id: $productId) {\n      ... on ProductVariant {\n        id\n        priceV2 {\n          amount\n          currencyCode\n        }\n      }\n    }\n  }\n`;\n\nconst EmptyTable = ({ headings, total }) => {\n  return (\n    <Container>\n      <Table responsive striped hover borderless>\n        <thead>\n          <tr>\n            {headings.map(({ heading, col }, index) => (\n              <th colSpan={col} key={index}>\n                <h3>{heading}</h3>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr className=\"last-row\">\n            <td\n              colSpan={\n                headings[0].col +\n                headings[1].col +\n                headings[2].col +\n                headings[3].col +\n                headings[4].col\n              }\n            >\n              Nothing is here....yet...\n            </td>\n          </tr>\n          <tr className=\"last-row\">\n            <td colSpan={headings[0].col} />\n            <td colSpan={headings[1].col} />\n            <td colSpan={headings[2].col} />\n            <th colSpan={headings[3].col}>\n              <h3>Total</h3>\n            </th>\n            <th colSpan={headings[4].col}>\n              <h3>BND {total}</h3>\n            </th>\n          </tr>\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nconst ItemPrice = ({ productId, colSpan1, colSpan2, quantity }) => {\n  const { data: price, loading } = useQuery(FETCH_ITEM_PRICE, {\n    variables: { productId },\n    skip: productId == null,\n  });\n  if (loading)\n    return (\n      <>\n        <td>...</td>\n        <td>...</td>\n      </>\n    );\n  return (\n    // console.log(\"price\", price),\n    // console.log(\"quantity\", quantity),\n    // console.log(\"productId\", productId),\n    <>\n      <td colSpan={colSpan1}>\n        {price.node.priceV2.currencyCode}&nbsp;\n        {Number.parseFloat(price.node.priceV2.amount).toFixed(2)}\n      </td>\n      <td colSpan={colSpan2}>\n        {price.node.priceV2.currencyCode} &nbsp;\n        {Number.parseFloat(quantity * price.node.priceV2.amount).toFixed(2)}\n      </td>\n    </>\n  );\n};\n\nconst CartTable = ({ headings, content, total }, refetch) => {\n  const [checkoutId, setCheckoutId] = useContext(CheckoutIdContext);\n  const [removeItemFromCart] = useMutation(REMOVE_LINEITEM, {\n    // refetchQueries:[{query: FETCH_CART}],\n    onCompleted: (data) => console.log(\"new data\", data) + refetch,\n    onError: (error) => alert(\"not removed\") + console.log(error),\n  });\n  const removeItem = (checkoutId, lineItemIds) => {\n    removeItemFromCart({ variables: { checkoutId, lineItemIds } });\n    // console.log();\n    alert(\"removed item\");\n    // refetch();\n    return {\n      //remove item from cart\n    };\n  };\n  return (\n    <Container>\n      <Table responsive striped hover borderless>\n        <thead>\n          <tr>\n            {headings.map(({ heading, col }, index) => (\n              <th colSpan={col} key={index}>\n                <h3>{heading}</h3>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {/* {content.map(({ quantity, unitPrice, title}, index) => ( */}\n          {content.map((each, index) => (\n            <tr key={index}>\n              <td colSpan={headings[0].col}>\n                <IconButton\n                  onClick={() => removeItem(checkoutId, each.node.id)}\n                  edge=\"start\"\n                  color=\"secondary\"\n                >\n                  <CloseIcon />\n                </IconButton>\n              </td>\n              <td colSpan={headings[1].col}>{each.node.quantity}</td>\n              <td colSpan={headings[2].col}>{each.node.title}</td>\n              {/* <td colSpan={headings[3].col}>BND {each.node.unitPrice}</td> */}\n              {/* <td colSpan={headings[3].col}> */}\n              <ItemPrice\n                productId={each.node.variant.id}\n                colSpan1={headings[3].col}\n                colSpan2={headings[4].col}\n                quantity={each.node.quantity}\n              />\n              {/* </td> */}\n              {/* <td colSpan={headings[4].col}>\n                BND {* each.node.unitPrice}\n              </td> */}\n            </tr>\n          ))}\n          <tr className=\"last-row\">\n            <td colSpan={headings[0].col} />\n            <td colSpan={headings[1].col} />\n            <td colSpan={headings[2].col} />\n            <th colSpan={headings[3].col}>\n              <h3>Total</h3>\n            </th>\n            <th colSpan={headings[4].col}>\n              <h3>\n                BND&nbsp;\n                {Number.parseFloat(total).toFixed(2)}\n              </h3>\n            </th>\n          </tr>\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nconst DeliveryTable = ({ headings, content, total, formik }) => {\n  return (\n    <Container>\n      <Table responsive striped hover borderless>\n        <thead>\n          <tr>\n            {headings.map(({ heading, col }, index) => (\n              <th colSpan={col} key={index}>\n                <h3\n                  style={\n                    heading[0]\n                      ? { textAlign: \"left\", marginLeft: \"2rem\" }\n                      : { textAlign: \"center\" }\n                  }\n                >\n                  {heading}\n                </h3>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {content.map(({ id, method, date, price, value, name }, index) => (\n            <tr key={index}>\n              <td colSpan={headings[0].col}>\n                <Radio\n                  label={method}\n                  name={name}\n                  value={value}\n                  // checked={setChecked(value)}\n                />\n              </td>\n              <td colSpan={headings[1].col}>{date}</td>\n              <td colSpan={headings[2].col}>\n                {price > 0 ? `BND ${price}` : \"free\"}\n              </td>\n            </tr>\n          ))}\n\n          <tr hover=\"false\">\n            <td colSpan={headings[0].col} />\n\n            <th colSpan={headings[1].col} style={{ borderBottom: \"none\" }}>\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>Delivery Total</h3>\n            </th>\n            <th colSpan={headings[2].col} style={{ borderBottom: \"none\" }}>\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>BND </h3>\n            </th>\n          </tr>\n          <tr hover=\"false\">\n            <td colSpan={headings[0].col} />\n\n            <th colSpan={headings[1].col}>\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>Order Total</h3>\n            </th>\n            <th colSpan={headings[2].col}>\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>BND {total}</h3>\n            </th>\n          </tr>\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nconst PaymentTable = ({ headings, content, total }) => {\n  return (\n    <Container>\n      <Table responsive striped hover borderless>\n        <thead>\n          <tr>\n            {headings.map(({ heading, col }, index) => (\n              <th colSpan={col} key={index}>\n                <h3\n                  style={\n                    heading[0]\n                      ? { textAlign: \"left\", marginLeft: \"2rem\" }\n                      : { textAlign: \"center\" }\n                  }\n                >\n                  {heading}\n                </h3>\n                {/* <hr style={{width: \"100%\"}} /> */}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {content.map(({ id, method }, index) => (\n            <tr key={index}>\n              <td colSpan={headings[0].col}>\n                <Radio label={method} />\n              </td>\n            </tr>\n          ))}\n          <tr hover=\"false\">\n            <td colSpan=\"8\" />\n            <th style={{ borderBottom: \"none\" }} colSpan=\"2\">\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>Delivery Total</h3>\n            </th>\n            <th style={{ borderBottom: \"none\" }} colSpan=\"2\">\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>BND </h3>\n            </th>\n          </tr>\n          <tr hover=\"false\">\n            <td colSpan=\"8\" />\n\n            <th colSpan=\"2\">\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>Order Total</h3>\n            </th>\n            <th colSpan=\"2\">\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>BND {total}</h3>\n            </th>\n          </tr>\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nexport { EmptyTable, CartTable, DeliveryTable, PaymentTable };\n","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Delivery.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Cart.js",["124"],"import React, { useContext } from \"react\";\nimport { EmptyTable, CartTable } from \"../../components/table\";\nimport ThemeButton from \"../../components/button\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Loading from \"../Loading\";\nimport Error from \"../Error\";\nimport { CheckoutIdContext } from \"../../context/shopContext\";\n\nimport styled from \"styled-components\";\n\nimport \"./checkout.css\";\n\nconst Container = styled.div`\n  @media (max-width: 500px) {\n    margin-top: 180px;\n  }\n  border: 5px solid #ff286b;\n  border-radius: 3px;\n  border-bottom: 50px solid #ff286b;\n  padding: 20px 20px 60px 20px;\n\n  height: auto;\n  width: 80%;\n  transform: translateX(15%);\n  margin-top: 100px;\n\n  h2 {\n    background: #005678;\n    height: 10vh;\n    width: auto;\n    margin: -100px 0 0 0;\n  }\n\n  .btn-secondary {\n    float: right;\n  }\n`;\n\nconst FETCH_CART = gql`\n  query($checkoutId: ID!) {\n    node(id: $checkoutId) {\n      ... on Checkout {\n        id\n        webUrl\n        lineItems(first: 50) {\n          edges {\n            node {\n              id\n              title\n              quantity\n              variant{\n                id\n              }\n            }\n          }\n        }\n        lineItemsSubtotalPrice {\n          amount\n        }\n      }\n    }\n  }\n`;\n\n\nconst tableHeading = [\n  {\n    heading: \"remove\",\n    col: 1,\n  },\n  { heading: \"qty\", col: 1 },\n  { heading: \"item\", col: 5 },\n  { heading: \"unit price\", col: 2 },\n  { heading: \"total price\", col: 3 },\n];\n\nconst Cart = () => {\n  // const lineItem = useContext(LineItemContext);\n  const [checkoutId, setCheckoutId] = useContext(CheckoutIdContext);\n\n  const handleCheckout = (webUrl) => {\n    window.location.href = webUrl;\n  };\n  // console.log(\"checkut id at cart\", checkoutId);\n  // console.log(typeof checkoutId);\n\n  // const FetchPrice = (productId) => {\n  //   const { data: itemPrice } = useQuery(FETCH_ITEM_PRICE, {\n  //     variables: productId,\n  //     skip: productId == null,\n  //   });\n  //   console.log(\"Item price here\", itemPrice);\n  // };\n  const FetchExisting = (checkoutId) => {\n    const { loading, data, error, refetch } = useQuery(FETCH_CART, {\n      variables: { checkoutId },\n    });\n    if (loading) return <Loading />;\n    if (error) return <Error error={error} />;\n    return (\n      <Container>\n        <h2 data-title=\"&nbsp;Checkout - Cart&nbsp;\">\n          &nbsp;Checkout - Cart&nbsp;\n        </h2>\n        <CartTable\n          headings={tableHeading}\n          refetch={refetch}\n          content={data.node.lineItems.edges}\n          total={data.node.lineItemsSubtotalPrice.amount}\n        />\n        <ThemeButton\n          className=\"btn-right\"\n          variant=\"secondary\"\n          text=\"Proceed to Checkout\"\n          disabled={data.node.lineItems.edges.length === 0 ? true : false}\n          onClick={() => handleCheckout(data.node.webUrl)}\n        />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <ThemeButton text=\"Continue Shopping\" />\n      </Container>\n    );\n  };\n\n  const EmptyCart = () => {\n    const total = 0;\n    return (\n      <Container>\n        <h2 data-title=\"&nbsp;Checkout - Cart&nbsp;\">\n          &nbsp;Checkout - Cart&nbsp;\n        </h2>\n        <EmptyTable\n          headings={tableHeading}\n          // refetch={refetch}\n          // content={data.node.lineItems.edges}\n          total={total}\n        />\n        <ThemeButton\n          className=\"btn-right\"\n          variant=\"secondary\"\n          text=\"Proceed to Checkout\"\n          disabled={true}\n          // onClick={() => handleCheckout(data.node.webUrl)}\n        />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <ThemeButton text=\"Continue Shopping\" />\n      </Container>\n    );\n  };\n  return checkoutId === \"\" || checkoutId === null\n    ? EmptyCart()\n    : FetchExisting(checkoutId);\n};\n\nexport default Cart;\n","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Payment.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Confirm.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/context/shopContext.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/Loading/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/Error/index.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":107,"column":11,"nodeType":"131","messageId":"132","endLine":107,"endColumn":24},{"ruleId":"129","severity":1,"message":"133","line":152,"column":9,"nodeType":"131","messageId":"132","endLine":152,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":178,"column":27,"nodeType":"136","endLine":178,"endColumn":51},{"ruleId":"129","severity":1,"message":"137","line":163,"column":22,"nodeType":"131","messageId":"132","endLine":163,"endColumn":35},{"ruleId":"129","severity":1,"message":"137","line":79,"column":22,"nodeType":"131","messageId":"132","endLine":79,"endColumn":35},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'productHandle' is assigned a value but never used.","Identifier","unusedVar","'theme' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setCheckoutId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]