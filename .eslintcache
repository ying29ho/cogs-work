[{"/Users/shimpling-one/Desktop/work/cogswork/src/index.js":"1","/Users/shimpling-one/Desktop/work/cogswork/src/App.js":"2","/Users/shimpling-one/Desktop/work/cogswork/src/reportWebVitals.js":"3","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Home/index.js":"4","/Users/shimpling-one/Desktop/work/cogswork/src/components/card/index.js":"5","/Users/shimpling-one/Desktop/work/cogswork/src/components/form/index.js":"6","/Users/shimpling-one/Desktop/work/cogswork/src/pages/SignUp/index.js":"7","/Users/shimpling-one/Desktop/work/cogswork/src/pages/LogIn/index.js":"8","/Users/shimpling-one/Desktop/work/cogswork/src/components/button/index.js":"9","/Users/shimpling-one/Desktop/work/cogswork/src/pages/CategoryProduct/index.js":"10","/Users/shimpling-one/Desktop/work/cogswork/src/pages/IndividualProduct/index.js":"11","/Users/shimpling-one/Desktop/work/cogswork/src/components/layout/sidebar/index.js":"12","/Users/shimpling-one/Desktop/work/cogswork/src/components/layout/index.js":"13","/Users/shimpling-one/Desktop/work/cogswork/src/components/router/index.js":"14","/Users/shimpling-one/Desktop/work/cogswork/src/components/layout/title/index.js":"15","/Users/shimpling-one/Desktop/work/cogswork/src/components/tabs/index.js":"16","/Users/shimpling-one/Desktop/work/cogswork/src/components/images/index.js":"17","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Policies/index.js":"18","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/index.js":"19","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/cart.js":"20","/Users/shimpling-one/Desktop/work/cogswork/src/components/table/index.js":"21","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Delivery.js":"22","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Cart.js":"23","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Payment.js":"24","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Confirm.js":"25","/Users/shimpling-one/Desktop/work/cogswork/src/context/shopContext.js":"26","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Loading/index.js":"27","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Error/index.js":"28","/Users/shimpling-one/Desktop/work/cogswork/src/types.js":"29"},{"size":2285,"mtime":1615186057402,"results":"30","hashOfConfig":"31"},{"size":1726,"mtime":1615190337668,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1610518116252,"results":"33","hashOfConfig":"31"},{"size":2861,"mtime":1615181886950,"results":"34","hashOfConfig":"31"},{"size":3115,"mtime":1615169280827,"results":"35","hashOfConfig":"31"},{"size":2557,"mtime":1611820404628,"results":"36","hashOfConfig":"31"},{"size":3304,"mtime":1611823963637,"results":"37","hashOfConfig":"31"},{"size":2024,"mtime":1611818511103,"results":"38","hashOfConfig":"31"},{"size":313,"mtime":1612410463757,"results":"39","hashOfConfig":"31"},{"size":2746,"mtime":1615170639653,"results":"40","hashOfConfig":"31"},{"size":4261,"mtime":1615184830256,"results":"41","hashOfConfig":"31"},{"size":4976,"mtime":1615190700170,"results":"42","hashOfConfig":"31"},{"size":355,"mtime":1614327403738,"results":"43","hashOfConfig":"31"},{"size":1875,"mtime":1612335092707,"results":"44","hashOfConfig":"31"},{"size":426,"mtime":1614327429858,"results":"45","hashOfConfig":"31"},{"size":1051,"mtime":1612407088520,"results":"46","hashOfConfig":"31"},{"size":791,"mtime":1614850042062,"results":"47","hashOfConfig":"31"},{"size":1564,"mtime":1611806298329,"results":"48","hashOfConfig":"31"},{"size":115,"mtime":1611727172164,"results":"49","hashOfConfig":"31"},{"size":1609,"mtime":1611728088515,"results":"50","hashOfConfig":"31"},{"size":7458,"mtime":1615027875767,"results":"51","hashOfConfig":"31"},{"size":2193,"mtime":1611824642126,"results":"52","hashOfConfig":"31"},{"size":2816,"mtime":1615182277789,"results":"53","hashOfConfig":"31"},{"size":1692,"mtime":1611806201287,"results":"54","hashOfConfig":"31"},{"size":1071,"mtime":1611806193236,"results":"55","hashOfConfig":"31"},{"size":1689,"mtime":1614690217306,"results":"56","hashOfConfig":"31"},{"size":641,"mtime":1614327517531,"results":"57","hashOfConfig":"31"},{"size":691,"mtime":1614327598431,"results":"58","hashOfConfig":"31"},{"size":513,"mtime":1614598706342,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"1f8ijn5",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"63"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/Users/shimpling-one/Desktop/work/cogswork/src/index.js",["130","131","132","133"],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\n// import { Provider } from \"react-redux\";\n// import { createStore } from \"redux\";\n// import Client from \"shopify-buy\";\n// import store from \"./redux/store\";\nimport typeBundle from \"./types\";\nimport App from \"./App\";\nimport {\n  ApolloClient,\n  HttpLink,\n  InMemoryCache,\n  ApolloProvider,\n  // setContext,\n} from \"@apollo/client\";\n// import ShopProvider from \"./context/shopContext\";\nimport { LineItemContext, CheckoutIdContext } from \"./context/shopContext\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst client = new ApolloClient({\n  //SHOPIFY STOREFRONT API\n  link: new HttpLink({\n    uri: \"https://cogs-work.myshopify.com/api/2021-01/graphql.json\",\n    headers: {\n      Accept: \"application/json\",\n      \"X-Shopify-Storefront-Access-Token\": \"3895fab55b392eba0cb70d2381319aea\",\n    },\n  }),\n  //  SHOPIFY ADMIN API\n  // link: new HttpLink({\n  //   uri: \"https://cogs-work.myshopify.com/admin/api/2021-01/graphql.json\",\n  //   headers: {\n  //     Accept: \"application/json\",\n  //     \"Access-Control-Allow-Origin\": \"*\",\n  //     \"X-Shopify-Access-Token\": \"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\",\n  //   },\n  // }),\n  cache: new InMemoryCache(),\n});\n// const lineItems = [];\n// const [checkoutId, setCheckoutId] = useState(\"\");\n\n// const initialState = {};\n// const apolloClient = createApolloClient();\n// const store = createStore(initialState, { client: client });\nReactDOM.render(\n  // <ShopProvider>\n  // <CheckoutIdContext.Provider value={checkoutId, setCheckoutId}>\n  //   <LineItemContext.Provider value={lineItems}>\n      <ApolloProvider client={client}>\n        <React.StrictMode>\n          <Router>\n            <App />\n          </Router>\n        </React.StrictMode>\n      </ApolloProvider>,\n  //   </LineItemContext.Provider>\n  // </CheckoutIdContext.Provider>,\n  // </ShopProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["134","135"],"/Users/shimpling-one/Desktop/work/cogswork/src/App.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/reportWebVitals.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/Home/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/components/card/index.js",["136"],"import Card from \"react-bootstrap/Card\";\nimport Button from \"../button\";\nimport { Input } from \"../form\";\nimport Form from \"../../components/form\";\nimport { Col } from \"react-bootstrap/\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport styled from \"styled-components\";\nimport \"./card.css\";\n\nconst MainContainer = styled.div`\n  .Container {\n    padding: 0px;\n  }\n  .card {\n    min-width: 230px;\n    height: 350px;\n    cursor: pointer;\n  }\n  @media (max-width: 500px) {\n    .card {\n      min-width: 150px;\n      height: 300px;\n    }\n  }\n`;\n\nconst ProductCard = ({\n  imgSrc,\n  name,\n  price,\n  rating,\n  handle,\n  productInfo,\n  ...props\n}) => (\n  <MainContainer>\n    {/* <Container> */}\n    <Col xs={6} sm={3}>\n      <Link\n        to={{\n          pathname: `/individual:${handle}`,\n          state: {\n            productHandle: { handle },\n            productInfo,\n          },\n        }}\n      >\n        <Card\n          stretched-link=\"true\"\n          className=\"productCard\"\n          bg=\"card-primary\"\n          text=\"card-text\"\n          // style={{ width: \"250px\", cursor: \"pointer\", height: \"400px\" }}\n        >\n          <Card.Img variant=\"top\" src={imgSrc} />\n          <Card.Body>\n            <Card.Title className=\"cardTitle\">{name}</Card.Title>\n            {/* <Card.Text className=\"cardPrice\">⭐️⭐️⭐️⭐️⭐️</Card.Text> */}\n            <Card.Text className=\"cardPrice\">\n              BND {Number.parseFloat(price).toFixed(2)}{\" \"}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Link>\n    </Col>\n    {/* </Row> */}\n    {/* </Container> */}\n  </MainContainer>\n);\n\nconst DetailCard = ({\n  productName,\n  availability,\n  price,\n  quantity,\n  rating,\n  onClick,\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      quantity: 1,\n    },\n    onSubmit: (values) => {\n      alert(\"wah\");\n    },\n  });\n  return (\n    <Card\n      className=\"detailCard\"\n      style={{ width: \"100%\", height: \"auto\", padding: \"20px\", border: \"none\" }}\n    >\n      <Card.Body>\n        <Card.Title\n          className=\"cardTitle\"\n          style={{ color: \"#9E1842 \", fontSize: \"2.5rem\" }}\n        >\n          {productName}\n        </Card.Title>\n        <hr />\n        <Card.Text className=\"cardAvailability\">\n          {availability} Available\n        </Card.Text>\n        <Card.Text className=\"cardPrice\">\n          BND {Number.parseFloat(price).toFixed(2)}{\" \"}\n        </Card.Text>\n\n        <Card.Text className=\"cardQty\">\n          QTY\n          <Input\n            type=\"number\"\n            style={{\n              width: \"15%\",\n              textAlign: \"center\",\n              display: \"inline-block\",\n            }}\n            min=\"1\"\n            max={availability}\n            value={formik.values.quantity}\n            onChange={formik.handleChange}\n            name=\"quantity\"\n          />\n        </Card.Text>\n        {/* <Card.Text className=\"cardPrice\">⭐️⭐️⭐️⭐️⭐️</Card.Text> */}\n        <Button text=\"Add to Cart🛒\" onClick={onClick} />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport { ProductCard, DetailCard };\n","/Users/shimpling-one/Desktop/work/cogswork/src/components/form/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/SignUp/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/LogIn/index.js",["137","138"],"// import Title from \" ../../components/layout/title\";\nimport { Input } from \"../../components/form\";\nimport Form from \"react-bootstrap/Form\";\nimport ThemeButton from \"../../components/button\";\nimport \"./LogIn.css\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\n\nconst Container = styled.div`\n  border: 5px solid #ff286b;\n  border-radius: 3px;\n  border-bottom: 50px solid #ff286b;\n  padding: 20px 30px 60px 30px;\n  height: auto;\n  width: 40%;\n  transform: translateX(15%);\n  margin: 230px auto 0 auto;\n\n  h2 {\n    background: #005678;\n    height: 10vh;\n    width: auto;\n    margin: -100px 0 0 35px;\n  }\n  .form-group {\n    padding-top: 30px;\n    width: inherit;\n    margin: 0 auto 0 auto;\n  }\n`;\n\nconst LogIn = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: (values) => {\n      //send to api here or somewhere\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <div className=\"container\">\n      <div className=\"main\">\n        <Container>\n          <h2 data-title=\"&nbsp;Log In&nbsp;\">&nbsp;Log In&nbsp;</h2>\n          <Form onSubmit={formik.handleSubmit}>\n            <Form.Group>\n              <Input\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                onChange={formik.handleChange}\n                value={formik.values.email}\n              />\n              <Input\n                label=\"Password\"\n                name=\"password\"\n                type=\"password\"\n                onChange={formik.handleChange}\n                value={formik.values.password}\n              />\n              <ThemeButton\n                variant=\"secondary\"\n                type=\"submit\"\n                block\n                text=\"Log In\"\n              />\n            </Form.Group>\n          </Form>\n        </Container>\n      </div>\n      <div className=\"side\" />\n    </div>\n  );\n};\n\nexport default LogIn;\n","/Users/shimpling-one/Desktop/work/cogswork/src/components/button/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/CategoryProduct/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/IndividualProduct/index.js",["139","140","141"],"// import Title from \"../../components/layout/title\";\nimport React, { useContext, useState } from \"react\";\n// import { Input, Checkbox, Select } from \"../../components/form\";\n// import Form from \"react-bootstrap/Form\";\n// import CardColumns from \"react-bootstrap/CardColumns\";\nimport { DetailCard } from \"../../components/card\";\nimport MainTab from \"../../components/tabs\";\nimport ImageCarousel from \"../../components/images\";\nimport { withRouter } from \"react-router\";\nimport { gql, useMutation } from \"@apollo/client\";\n\n// import { connect } from \"react-redux\";\n// import {addLineItem} from \"../../redux/actions\";\n\nimport \"./Individual.css\";\n\nimport styled from \"styled-components\";\nimport { LineItemContext, CheckoutIdContext } from \"../../context/shopContext\";\n\nconst Container = styled.div`\n  border: 5px solid #ff286b;\n  border-radius: 3px;\n  border-bottom: 50px solid #ff286b;\n  padding: 20px 20px 60px 20px;\n\n  height: auto;\n  width: 80%;\n  transform: translateX(15%);\n  margin-top: 100px;\n\n  h2 {\n    background: #005678;\n    height: 10vh;\n    width: auto;\n    margin: -100px 0 0 0;\n  }\n\n  @media (max-width: 500px) {\n    width: 95vw;\n    margin: 120px 0 0 -40px;\n\n    h2 {\n      display: none;\n    }\n  }\n`;\n\nconst FIRST_ADD_LINEITEMS = gql`\n  mutation($lineItem: [CheckoutLineItemInput!]!) {\n    checkoutCreate(input: { lineItems: $lineItem }) {\n      checkout {\n        id\n        webUrl\n        lineItems(first: 20){\n        edges{\n          node{\n            id\n            title\n            quantity\n          }\n        }\n      }\n      }\n    }\n  }\n`;\n\nconst ADD_LINEITEMS = gql`\n  mutation checkoutLineItemsAdd(\n    $lineItem: [CheckoutLineItemInput!]!\n    $checkoutId: ID!\n  ) {\n    checkoutLineItemsAdd(lineItems: $lineItem, checkoutId: $checkoutId) {\n      checkout {\n        id\n        webUrl\n      }\n      checkoutUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`;\n\n\nconst IndividualProduct = (props) => {\n  const { productHandle, productInfo } = props.location.state;\n  //cannot move this\n  // const lineItem = useContext(LineItemContext);\n  const [checkoutId, setCheckoutId] = useContext(CheckoutIdContext);\n\n  console.log(\"checkoutid\", checkoutId);\n  console.log(typeof checkoutId);\n\n  const [updateCart] = useMutation(ADD_LINEITEMS, {\n    onCompleted: (data) => console.log(\"update add data\", data),\n    onError: (error) =>\n      alert(\"Not Added to cart. Try again\") + console.log(error),\n  });\n\n  const [firstAddToCart] = useMutation(FIRST_ADD_LINEITEMS, {\n    onCompleted: (data) => setCheckoutId(data.checkoutCreate.checkout.id) + console.log(\"first add data\", data) + console.log(\"new checkout id\",checkoutId),\n    onError: (error) =>\n      alert(\"Not added to cart. Try again\") + console.log(error),\n  });\n\n  const HandleAddToCart = (variantId, quantity) => {\n    // const newItem = {\n    //   variantId: variantId,\n    //   quantity: quantity,\n    // };\n    // lineItem.push(newItem);\n    const lineItem = [\n      {\n        \"variantId\": variantId,\n        \"quantity\": quantity\n      },\n    ];\n    console.log(\"pushed item\", lineItem);\n    // console.log(typeof lineItem);\n\n    checkoutId === \"\" || checkoutId === null\n      ? firstAddToCart({ variables: {lineItem} })\n      : updateCart({ variables: { lineItem, checkoutId } });\n    // console.log(lineItem);\n    return alert(\"Added to Cart\");\n  };\n  return (\n    <Container className=\"individual\">\n      <h2 data-title={productInfo.title}>{productInfo.title}</h2>\n\n      <div className=\"indi-main\">\n        <div className=\"container-1\">\n          <ImageCarousel arrays={productInfo.images.edges} />\n        </div>\n        <div className=\"container-2\">\n          <DetailCard\n            productName={productInfo.title}\n            availability={productInfo.totalInventory}\n            quantity=\"1\"\n            price={productInfo.priceRange.maxVariantPrice.amount}\n            onClick={() =>\n              HandleAddToCart(productInfo.variants.edges[0].node.id, 1)\n            }\n          />\n        </div>\n        <div className=\"container-3\">\n          <MainTab defaultActiveKey=\"desc\" desc={productInfo.description} />\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default // connect(null, { addLineItem });\nwithRouter(IndividualProduct);\n","/Users/shimpling-one/Desktop/work/cogswork/src/components/layout/sidebar/index.js",["142","143","144","145","146"],"/Users/shimpling-one/Desktop/work/cogswork/src/components/layout/index.js",["147","148"],"import React, { useContext, useEffect } from \"react\";\nimport Router from \"../router\";\nimport Sidebar from \"./sidebar\";\nimport Title from \"./title\";\nimport \"./Layout.css\";\n\nconst Layout = () => {\n  // const { lineItem } = useContext(ShopContext);\n  return (\n    <>\n      <Title />\n      <Sidebar />\n      <Router />\n    </>\n  );\n};\n\nexport default Layout;\n","/Users/shimpling-one/Desktop/work/cogswork/src/components/router/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/components/layout/title/index.js",["149"],"import \"./index.css\";\nimport styled from \"styled-components\";\n\n// const Container = styled.div`\n//   position: sticky;\n// `;\n// const Container1 = styled.div`\n//   overflow: hidden;\n// `;\n\nconst Title = () => {\n  return (\n    // <Container1>\n    //   <Container>\n        <h1 className=\"logo\" data-title=\"cog's work\">\n          cog's work\n        </h1>\n    //   </Container>\n    // </Container1>\n  );\n};\n\nexport default Title;\n","/Users/shimpling-one/Desktop/work/cogswork/src/components/tabs/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/components/images/index.js",["150"],"import React, { useState } from \"react\";\nimport \"./images.css\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 25rem;\n`;\n\nconst ImageCarousel = ({ arrays }) => {\n  // console.log(\"Main\", arrays[0].node)\n  const [main, setMain] = useState(arrays[0].node);\n  const handleOnClick = (props) => {\n    setMain(props);\n  };\n  return (\n    <Container>\n      <img className=\"image-main\" src={main.originalSrc} alt={main.alt} />\n      {/* {console.log(\"IMAGE\",arrays)} */}\n      {arrays.map(({node}) => (\n        <img\n          className=\"image-secondary\"\n          key={node.id}\n          onClick={() => handleOnClick(node)}\n          src={node.originalSrc}\n          // alt={each.alt}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default ImageCarousel;\n","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Policies/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/cart.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/components/table/index.js",["151","152"],"import React, { useContext, useEffect } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { Radio } from \"../form\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nimport styled from \"styled-components\";\nimport { CheckoutIdContext } from \"../../context/shopContext\";\n\nconst Container = styled.div`\n  width: 100%;\n\n  th {\n    text-align: center;\n    border-bottom: 2px solid #05d9e8;\n    border-bottom-width: 100%;\n  }\n  td {\n    color: #d1f7ff;\n    font-size: 1.5rem;\n    text-align: center;\n  }\n\n  h3 {\n    margin: 0;\n  }\n\n  .radio > label {\n    font-size: 1.5rem;\n  }\n\n  .radio {\n    text-align: left;\n    margin-left: 2rem;\n  }\n`;\n\nconst REMOVE_LINEITEM = gql`\n  mutation checkoutLineItemsRemove($checkoutId: ID!, $lineItemIds: [ID!]!) {\n    checkoutLineItemsRemove(\n      checkoutId: $checkoutId\n      lineItemIds: $lineItemIds\n    ) {\n      checkout {\n        id\n        webUrl\n        lineItems(first: 50) {\n          edges {\n            node {\n              id\n              title\n              quantity\n              unitPrice {\n                amount\n              }\n            }\n          }\n        }\n        lineItemsSubtotalPrice {\n          amount\n        }\n      }\n      checkoutUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`;\n\nconst CartTable = ({ headings, content, total} ,refetch ) => {\n  const [checkoutId, setCheckoutId] = useContext(CheckoutIdContext);\n  const [removeItemFromCart] = useMutation(REMOVE_LINEITEM, {\n    // refetchQueries:[{query: FETCH_CART}],\n    onCompleted: (data) => console.log(\"new data\", data) + refetch,\n    onError: (error) => alert(\"not removed\") + console.log(error),\n  });\n  const removeItem = (checkoutId, lineItemIds) => {\n    removeItemFromCart({ variables: { checkoutId, lineItemIds } });\n    // console.log();\n    alert(\"removed item\");\n    // refetch();\n    return {\n      //remove item from cart\n    };\n  };\n  return (\n    <Container>\n      <Table responsive striped hover borderless>\n        <thead>\n          <tr>\n            {headings.map(({ heading, col }, index) => (\n              <th colSpan={col} key={index}>\n                <h3>{heading}</h3>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {/* {content.map(({ quantity, unitPrice, title}, index) => ( */}\n          {content.map((each, index) => (\n            <tr key={index}>\n              <td colSpan={headings[0].col}>\n                <IconButton\n                  onClick={() => removeItem(checkoutId, each.node.id)}\n                  edge=\"start\"\n                  color=\"secondary\"\n                >\n                  <CloseIcon />\n                </IconButton>\n              </td>\n              <td colSpan={headings[1].col}>{each.node.quantity}</td>\n              <td colSpan={headings[2].col}>{each.node.title}</td>\n              <td colSpan={headings[3].col}>BND {each.node.unitPrice}</td>\n              <td colSpan={headings[4].col}>\n                BND {each.node.quantity * each.node.unitPrice}\n              </td>\n            </tr>\n          ))}\n          <tr hover=\"false\">\n            <td colSpan={headings[0].col} />\n            <td colSpan={headings[1].col} />\n            <td colSpan={headings[2].col} />\n            <th colSpan={headings[3].col}>\n              <h3>Total</h3>\n            </th>\n            <th colSpan={headings[4].col}>\n              <h3>BND {total}</h3>\n            </th>\n          </tr>\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nconst DeliveryTable = ({ headings, content, total, formik }) => {\n  return (\n    <Container>\n      <Table responsive striped hover borderless>\n        <thead>\n          <tr>\n            {headings.map(({ heading, col }, index) => (\n              <th colSpan={col} key={index}>\n                <h3\n                  style={\n                    heading[0]\n                      ? { textAlign: \"left\", marginLeft: \"2rem\" }\n                      : { textAlign: \"center\" }\n                  }\n                >\n                  {heading}\n                </h3>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {content.map(({ id, method, date, price, value, name }, index) => (\n            <tr key={index}>\n              <td colSpan={headings[0].col}>\n                <Radio\n                  label={method}\n                  name={name}\n                  value={value}\n                  // checked={setChecked(value)}\n                />\n              </td>\n              <td colSpan={headings[1].col}>{date}</td>\n              <td colSpan={headings[2].col}>\n                {price > 0 ? `BND ${price}` : \"free\"}\n              </td>\n            </tr>\n          ))}\n\n          <tr hover=\"false\">\n            <td colSpan={headings[0].col} />\n\n            <th colSpan={headings[1].col} style={{ borderBottom: \"none\" }}>\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>Delivery Total</h3>\n            </th>\n            <th colSpan={headings[2].col} style={{ borderBottom: \"none\" }}>\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>BND </h3>\n            </th>\n          </tr>\n          <tr hover=\"false\">\n            <td colSpan={headings[0].col} />\n\n            <th colSpan={headings[1].col}>\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>Order Total</h3>\n            </th>\n            <th colSpan={headings[2].col}>\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>BND {total}</h3>\n            </th>\n          </tr>\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nconst PaymentTable = ({ headings, content, total }) => {\n  return (\n    <Container>\n      <Table responsive striped hover borderless>\n        <thead>\n          <tr>\n            {headings.map(({ heading, col }, index) => (\n              <th colSpan={col} key={index}>\n                <h3\n                  style={\n                    heading[0]\n                      ? { textAlign: \"left\", marginLeft: \"2rem\" }\n                      : { textAlign: \"center\" }\n                  }\n                >\n                  {heading}\n                </h3>\n                {/* <hr style={{width: \"100%\"}} /> */}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {content.map(({ id, method }, index) => (\n            <tr key={index}>\n              <td colSpan={headings[0].col}>\n                <Radio label={method} />\n              </td>\n            </tr>\n          ))}\n          <tr hover=\"false\">\n            <td colSpan=\"8\" />\n            <th style={{ borderBottom: \"none\" }} colSpan=\"2\">\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>Delivery Total</h3>\n            </th>\n            <th style={{ borderBottom: \"none\" }} colSpan=\"2\">\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>BND </h3>\n            </th>\n          </tr>\n          <tr hover=\"false\">\n            <td colSpan=\"8\" />\n\n            <th colSpan=\"2\">\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>Order Total</h3>\n            </th>\n            <th colSpan=\"2\">\n              {/* <hr style={{padding: '0'}}/> */}\n              <h3>BND {total}</h3>\n            </th>\n          </tr>\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nexport { CartTable, DeliveryTable, PaymentTable };\n","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Delivery.js",["153","154"],"import React, { useState } from \"react\";\nimport { DeliveryTable } from \"../../components/table\";\nimport Button from \"../../components/button\";\nimport { Radio } from \"../../components/form\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport styled from \"styled-components\";\nimport \"./checkout.css\";\n\nconst Container = styled.div`\n  border: 5px solid #ff286b;\n  border-radius: 3px;\n  border-bottom: 50px solid #ff286b;\n  padding: 20px 20px 60px 20px;\n\n  height: auto;\n  width: 80%;\n  transform: translateX(15%);\n  margin-top: 100px;\n\n  h2 {\n    background: #005678;\n    height: 10vh;\n    width: auto;\n    margin: -100px 0 0 0;\n  }\n\n  .btn-secondary {\n    float: right;\n  }\n`;\nconst tableHeading = [\n  {\n    heading: \"Delivery Method\",\n    col: 8,\n  },\n  { heading: \"Date\", col: 2 },\n  { heading: \"Price\", col: 2 },\n];\n\nconst tableContent = [\n  {\n    id: 1,\n    value: 1,\n    name: \"pickUp\",\n    method: \"Self Pick Up\",\n    date: \"\",\n    price: 0,\n  },\n  {\n    id: 2,\n    value: 2,\n    name: \"delivery\",\n    method: \"Shipping with Pos Laju\",\n    date: \"\",\n    price: 4,\n  },\n];\n\nconst Delivery = () => {\n  const [checked, setChecked] = useState(null);\n  const formik = useFormik({\n    initialValues: {\n      pickUp: true,\n      delivery: false,\n    },\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <Container>\n      <h2 data-title=\"&nbsp;Checkout - Delivery&nbsp;\">\n        &nbsp;Checkout - Delivery&nbsp;\n      </h2>\n      <h3 style={{ margin: \"1em 0 1em 1em\" }}>\n        Please choose your preferred delivery method\n      </h3>\n      <DeliveryTable\n        headings={tableHeading}\n        content={tableContent}\n        total=\"502.00\"\n        checked={checked}\n        setChecked={setChecked}\n      />\n      <Link to=\"/checkout-payment\">\n        <Button\n          className=\"btn-right\"\n          variant=\"secondary\"\n          text=\"Proceed to Payment\"\n        />\n      </Link>\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <Link to=\"checkout-cart\">\n        <Button text=\"Back to Cart\" />\n      </Link>\n    </Container>\n  );\n};\n\nexport default Delivery;\n","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Cart.js",["155","156"],"import React, { useContext } from \"react\";\nimport { CartTable } from \"../../components/table\";\nimport ThemeButton from \"../../components/button\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Loading from \"../Loading\";\nimport Error from \"../Error\";\nimport { LineItemContext, CheckoutIdContext } from \"../../context/shopContext\";\n\nimport styled from \"styled-components\";\n\nimport \"./checkout.css\";\n\nconst Container = styled.div`\n  @media (max-width: 500px) {\n    margin-top: 180px;\n  }\n  border: 5px solid #ff286b;\n  border-radius: 3px;\n  border-bottom: 50px solid #ff286b;\n  padding: 20px 20px 60px 20px;\n\n  height: auto;\n  width: 80%;\n  transform: translateX(15%);\n  margin-top: 100px;\n\n  h2 {\n    background: #005678;\n    height: 10vh;\n    width: auto;\n    margin: -100px 0 0 0;\n  }\n\n  .btn-secondary {\n    float: right;\n  }\n`;\n\nconst FETCH_CART = gql`\n  query($checkoutId: ID!) {\n    node(id: $checkoutId) {\n      ... on Checkout {\n        id\n        webUrl\n        lineItems(first: 50) {\n          edges {\n            node {\n              id\n              title\n              quantity\n              unitPrice {\n                amount\n              }\n            }\n          }\n        }\n        lineItemsSubtotalPrice {\n          amount\n        }\n      }\n    }\n  }\n`;\n\nconst tableHeading = [\n  {\n    heading: \"remove\",\n    col: 1,\n  },\n  { heading: \"qty\", col: 1 },\n  { heading: \"item\", col: 5 },\n  { heading: \"unit price\", col: 2 },\n  { heading: \"total price\", col: 3 },\n];\n\nconst Cart = () => {\n  // const lineItem = useContext(LineItemContext);\n  const [checkoutId, setCheckoutId] = useContext(CheckoutIdContext);\n  \n  const handleCheckout =(webUrl)=>{\n    window.location.href = webUrl;\n  }\n  console.log(\"checkut id at cart\", checkoutId);\n  console.log(typeof checkoutId);\n   const { loading, data, error, refetch } = useQuery(FETCH_CART, {\n    variables: { checkoutId },\n  });\n  if (loading) return <Loading />;\n  if (error) return <Error error={error} />;\n  return (\n    <Container>\n      {console.log(\"CART DATA\", data)}\n      {console.log(\"content\", data.node.lineItems.edges)}\n      <h2 data-title=\"&nbsp;Checkout - Cart&nbsp;\">\n        &nbsp;Checkout - Cart&nbsp;\n      </h2>\n      <CartTable\n        refetch={refetch}\n        headings={tableHeading}\n        content={data.node.lineItems.edges}\n        total={data.node.lineItemsSubtotalPrice.amount}\n      />\n      <ThemeButton\n        className=\"btn-right\"\n        variant=\"secondary\"\n        text=\"Proceed to Checkout\"\n        disabled={data.node.lineItems.edges.length === 0 ? true : false}\n        onClick={()=>handleCheckout(data.node.webUrl)}\n      />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <ThemeButton text=\"Continue Shopping\" />\n    </Container>\n  );\n};\n\nexport default Cart;\n","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Payment.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/Checkout/Confirm.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/context/shopContext.js",["157","158"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n// import Client from \"shopify-buy\";\n\nconst LineItemContext = React.createContext([]);\nconst CheckoutIdContext = React.createContext();\nconst ThemeContext = React.createContext(\"light\");\n\n\n// const [CheckoutIdContext, setCheckoutIdContext] = useState();\n// const ShopContext = React.createContext();\n// const StoreFrontAPIContext = React.createContext();\n\n// const client = Client.buildClient({\n//   domain: \"https://cogs-work.myshopify.com\",\n//   storefrontAccessToken: \"3895fab55b392eba0cb70d2381319aea\",\n// });\n\n// class ShopProvider extends Component {\n//   state = {\n//     lineItem: [],\n//     product: {},\n//     //initialise checkout and save to browser\n//     checkoutId: {},\n//   };\n\n//   componentDidMount() {\n//     this.createCheckout();\n//   }\n//   createCheckout = async () => {\n//     const checkout = await client.checkout.create()\n//     // .then((checkout) => {\n//       // console.log(\"checkout\", checkout);\n//       // localStorage.setItem(\"checkoutId\", checkout.id);\n//       this.setState({ checkoutId: checkout });\n//     // });\n//   };\n\n//   fetchAllProducts = async () => {\n//     const products = await client.product.fetchAll();\n//   };\n//   addItemtoCart = async (variantId, quantity) => {};\n\n//   render() {\n//     return (\n//       <ShopContext.Provider value={{ ...this.state }}>\n//         {this.props.children}\n//       </ShopContext.Provider>\n//     );\n//   }\n// }\n\n// const ShopConsumer = ShopContext.Consumer;\n// export { ShopConsumer, ShopContext, LineItemContext, ThemeContext };\n// export default ShopProvider;\nexport { LineItemContext, ThemeContext, CheckoutIdContext };\n","/Users/shimpling-one/Desktop/work/cogswork/src/pages/Loading/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/pages/Error/index.js",[],"/Users/shimpling-one/Desktop/work/cogswork/src/types.js",[],{"ruleId":"159","severity":1,"message":"160","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"163","line":8,"column":8,"nodeType":"161","messageId":"162","endLine":8,"endColumn":18},{"ruleId":"159","severity":1,"message":"164","line":18,"column":10,"nodeType":"161","messageId":"162","endLine":18,"endColumn":25},{"ruleId":"159","severity":1,"message":"165","line":18,"column":27,"nodeType":"161","messageId":"162","endLine":18,"endColumn":44},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"159","severity":1,"message":"170","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":12},{"ruleId":"159","severity":1,"message":"171","line":7,"column":13,"nodeType":"161","messageId":"162","endLine":7,"endColumn":16},{"ruleId":"159","severity":1,"message":"160","line":9,"column":10,"nodeType":"161","messageId":"162","endLine":9,"endColumn":18},{"ruleId":"159","severity":1,"message":"160","line":2,"column":29,"nodeType":"161","messageId":"162","endLine":2,"endColumn":37},{"ruleId":"159","severity":1,"message":"164","line":18,"column":10,"nodeType":"161","messageId":"162","endLine":18,"endColumn":25},{"ruleId":"159","severity":1,"message":"172","line":89,"column":11,"nodeType":"161","messageId":"162","endLine":89,"endColumn":24},{"ruleId":"159","severity":1,"message":"173","line":14,"column":8,"nodeType":"161","messageId":"162","endLine":14,"endColumn":14},{"ruleId":"159","severity":1,"message":"174","line":15,"column":8,"nodeType":"161","messageId":"162","endLine":15,"endColumn":13},{"ruleId":"159","severity":1,"message":"175","line":137,"column":10,"nodeType":"161","messageId":"162","endLine":137,"endColumn":14},{"ruleId":"159","severity":1,"message":"176","line":139,"column":9,"nodeType":"161","messageId":"162","endLine":139,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":150,"column":27,"nodeType":"179","endLine":150,"endColumn":51},{"ruleId":"159","severity":1,"message":"180","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":27},{"ruleId":"159","severity":1,"message":"181","line":1,"column":29,"nodeType":"161","messageId":"162","endLine":1,"endColumn":38},{"ruleId":"159","severity":1,"message":"182","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":14},{"ruleId":"183","severity":1,"message":"184","line":20,"column":9,"nodeType":"185","endLine":26,"endColumn":11},{"ruleId":"159","severity":1,"message":"181","line":1,"column":29,"nodeType":"161","messageId":"162","endLine":1,"endColumn":38},{"ruleId":"159","severity":1,"message":"186","line":75,"column":22,"nodeType":"161","messageId":"162","endLine":75,"endColumn":35},{"ruleId":"159","severity":1,"message":"187","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":15},{"ruleId":"159","severity":1,"message":"188","line":62,"column":9,"nodeType":"161","messageId":"162","endLine":62,"endColumn":15},{"ruleId":"159","severity":1,"message":"164","line":7,"column":10,"nodeType":"161","messageId":"162","endLine":7,"endColumn":25},{"ruleId":"159","severity":1,"message":"186","line":78,"column":22,"nodeType":"161","messageId":"162","endLine":78,"endColumn":35},{"ruleId":"159","severity":1,"message":"160","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"189","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":17},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'typeBundle' is defined but never used.","'LineItemContext' is defined but never used.","'CheckoutIdContext' is defined but never used.","no-native-reassign",["190"],"no-negated-in-lhs",["191"],"'Form' is defined but never used.","'Yup' is defined but never used.","'productHandle' is assigned a value but never used.","'SignUp' is defined but never used.","'LogIn' is defined but never used.","'data' is assigned a value but never used.","'theme' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useContext' is defined but never used.","'useEffect' is defined but never used.","'styled' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setCheckoutId' is assigned a value but never used.","'Radio' is defined but never used.","'formik' is assigned a value but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]